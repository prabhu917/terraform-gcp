name: Terraform CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  plan:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      TF_IN_AUTOMATION: true
      TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
      TF_VAR_region: ${{ vars.TF_VAR_region }}
      TF_VAR_bucket_name: ${{ vars.TF_VAR_bucket_name }}
      TF_VAR_gcs_folder_name: ${{ vars.TF_VAR_gcs_folder_name }}
      TF_VAR_bq_dataset_id: ${{ vars.TF_VAR_bq_dataset_id }}
      TF_VAR_dataproc_cluster_name: ${{ vars.TF_VAR_dataproc_cluster_name }}
      TF_VAR_dataproc_master_machine_type: ${{ vars.TF_VAR_dataproc_master_machine_type }}
      TF_VAR_dataproc_worker_machine_type: ${{ vars.TF_VAR_dataproc_worker_machine_type }}
      TF_VAR_dataproc_worker_count: ${{ vars.TF_VAR_dataproc_worker_count }}
      TF_VAR_service_account_id: ${{ vars.TF_VAR_service_account_id }}
      TF_VAR_service_account_display_name: ${{ vars.TF_VAR_service_account_display_name }}
      TF_VAR_service_account_roles: ${{ vars.TF_VAR_service_account_roles }}
      TF_VAR_network_name: ${{ vars.TF_VAR_network_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init -upgrade

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan -lock-timeout=60s

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    timeout-minutes: 20
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    env:
      TF_IN_AUTOMATION: true
      TF_VAR_project_id: ${{ secrets.TF_VAR_project_id }}
      TF_VAR_region: ${{ vars.TF_VAR_region }}
      TF_VAR_bucket_name: ${{ vars.TF_VAR_bucket_name }}
      TF_VAR_gcs_folder_name: ${{ vars.TF_VAR_gcs_folder_name }}
      TF_VAR_bq_dataset_id: ${{ vars.TF_VAR_bq_dataset_id }}
      TF_VAR_dataproc_cluster_name: ${{ vars.TF_VAR_dataproc_cluster_name }}
      TF_VAR_dataproc_master_machine_type: ${{ vars.TF_VAR_dataproc_master_machine_type }}
      TF_VAR_dataproc_worker_machine_type: ${{ vars.TF_VAR_dataproc_worker_machine_type }}
      TF_VAR_dataproc_worker_count: ${{ vars.TF_VAR_dataproc_worker_count }}
      TF_VAR_service_account_id: ${{ vars.TF_VAR_service_account_id }}
      TF_VAR_service_account_display_name: ${{ vars.TF_VAR_service_account_display_name }}
      TF_VAR_service_account_roles: ${{ vars.TF_VAR_service_account_roles }}
      TF_VAR_network_name: ${{ vars.TF_VAR_network_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init -upgrade

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
